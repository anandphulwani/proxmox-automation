- name: "Declare all variables"
  set_fact:
    file_sno_type_prefix: "{{ '%02d' | format(pretask_taskandtaskcondition_message_sno | int) }}-Pre_Task:"
    section_name: "`Virtualization and VT-d enabled`"
    latest_datetime_task: null
    message_output: null
  changed_when: false

- name: "{{ file_sno_type_prefix }} 001: {{ section_name }}, Get the latest run file if exits"
  shell: ls -1r /root/proxmox_automation_install/task_virtualization_vtd_enabled_*.run.tmp | head -n 1 | grep -oP "[^_]_\K[0-9]{8}-[0-9]{6}"
  register: latest_datetime_task
  ignore_errors: yes
  changed_when: false
  failed_when: false

- name: "{{ file_sno_type_prefix }} 002: {{ section_name }}, Execute `border_message.py` Python script on localhost to display the message."
  shell: "python3 includes/border_message.py \"Make sure \\`Virtualization\\` and \n\\`VT-d\\` is enabled in the BIOS.\" {{ terminal_width }}"
  register: message_output
  delegate_to: localhost
  changed_when: false
  run_once: true
  when: latest_datetime_task.rc != 0

- name: "{{ file_sno_type_prefix }} 003: {{ section_name }}, Show the above message."
  delegate_to: localhost
  pause:
    prompt: "{{ message_output.stdout }}\nPress a key to continue"
  when: latest_datetime_task.rc != 0

- name: "{{ file_sno_type_prefix }} 004: {{ section_name }}, Touching run file on successful completion."
  shell: "mkdir -p /root/proxmox_automation_install && rm -f /root/proxmox_automation_install/task_virtualization_vtd_enabled_* && sleep 2 && touch /root/proxmox_automation_install/task_virtualization_vtd_enabled_$(date +%Y%m%d-%H%M%S).run.tmp"
  ignore_errors: true
  changed_when: false
  when: latest_datetime_task.rc != 0
